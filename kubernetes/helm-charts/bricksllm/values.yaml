---
# replica count for the bricksllm Deployment
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: luyuanxin1995/bricksllm
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# for private registries hosting the imagery
imagePullSecrets: []

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# establish a dedicated service account
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# additional pod annotations
podAnnotations: {}

# additional pod labels
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

services:
  control:
    type: ClusterIP
    port: 8001
  data:
    type: ClusterIP
    port: 8002

# Configuring Ingress
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

#resources:
#  limits:
#    cpu: 100m
#    memory: 128Mi
#  requests:
#    cpu: 100m
#    memory: 128Mi

#livenessProbe:
#  httpGet:
#    path: /
#    port: http

#readinessProbe:
#  httpGet:
#    path: /
#    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes for the Deployments
#volumes:
#  - name: foo
#    secret:
#      secretName: mysecret
#      optional: false

# Additional volumeMounts for the deployments
#volumeMounts:
#  - name: foo
#    mountPath: "/etc/foo"
#    readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
